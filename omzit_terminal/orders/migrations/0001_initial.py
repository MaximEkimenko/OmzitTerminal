# Generated by Django 4.2.4 on 2024-08-06 08:23

from django.db import migrations, models
import django.db.models.deletion
import orders.models
import orders.utils.common


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# orders.migrations.0002_auto_20240610_1131
# orders.migrations.0006_auto_20240618_1514


from orders.models import Materials


def populate_materials(apps, schema_editor):
    Materials = apps.get_model("orders", "Materials")
    Materials.objects.create(name="не определено")
    Materials.objects.create(name="Материалы не требуются")


def populate_shops(apps, schema_editor):
    Shops = apps.get_model("orders", "Shops")
    Shops.objects.create(name="Цех № 1")
    Shops.objects.create(name="Цех № 2")
    Shops.objects.create(name="Цех № 3")
    Shops.objects.create(name="Цех № 4")
    Shops.objects.create(name="Цех № 5")


def populate_status(apps, schema_editor):
    OrderStatus = apps.get_model("orders", "OrderStatus")
    OrderStatus.objects.create(name="требует ремонта")
    OrderStatus.objects.create(name="ремонт начат")
    OrderStatus.objects.create(name="требуются материалы")
    OrderStatus.objects.create(name="ожидание акта")
    OrderStatus.objects.create(name="в ремонте")
    OrderStatus.objects.create(name="ремонт окончен")
    OrderStatus.objects.create(name="ремонт принят")
    OrderStatus.objects.create(name="ремонт отменен")
    OrderStatus.objects.create(name="неремонтопригодно")



def populate_repairmen(apps, schema_editor):
    Repairmen = apps.get_model("orders", "Repairmen")
    Repairmen.objects.create(
        fio="Новиков А.Н.",
        position="главный инженер",
        phone="8-923-678-82-50",
        telegram_id="",
    )
    Repairmen.objects.create(
        fio="Родионов А.С.",
        position="главный энергетик",
        phone="8-951-407-16-57",
        telegram_id="5092813369",
    )
    Repairmen.objects.create(
        fio="Величко М.В.",
        position="главный энергетик",
        phone="8-913-656-55-56",
        telegram_id="5226883305",
    )
    Repairmen.objects.create(
        fio="Викторов А.В.",
        position="инженер-энергетик",
        phone="8-926-328-46-90",
        telegram_id="5990089219",
    )
    Repairmen.objects.create(
        fio="Балашенко Д.А.",
        position="инженер - механик",
        phone="8-908-119-38-82",
        telegram_id="5377855473",
    )
    Repairmen.objects.create(
        fio="Пашко Л.С.",
        position="инженер наладчик сварочного оборудования",
        phone="8-960-980-81-30",
        telegram_id="5126990447",
    )
    Repairmen.objects.create(
        fio="Родионова М.Ю.",
        position="администратор",
        phone="8-908-800-56-73",
        telegram_id="5040154034",
    )
    Repairmen.objects.create(
        fio="Галюк Д.В.",
        position="электромонтер по ремонту и обслуживанию электрооборудования",
        phone="8-923-458-42-56",
        telegram_id="",
    )
    Repairmen.objects.create(
        fio="Андреев О.В.",
        position="электромонтер по ремонту и обслуживанию электрооборудования",
        phone="8-913-612-12-19",
        telegram_id="5038982760",
    )
    Repairmen.objects.create(
        fio="Борисенко В.В.", position="слесарь-ремонтник", phone="8-950-954-50-26", telegram_id=""
    )
    Repairmen.objects.create(
        fio="Лыскин Д.И.", position="слесарь-ремонтник", phone="8-983-623-01-31", telegram_id=""
    )
    Repairmen.objects.create(
        fio="Цыбульский С.В.",
        position="наладчик сварочного оборудования",
        phone="8-905-921-89-70",
        telegram_id="5162828251",
    )
    Repairmen.objects.create(
        fio="Овсянников В.А.",
        position="наладчик сварочного оборудования",
        phone="8-901-263-53-54",
        telegram_id="",
    )
    Repairmen.objects.create(
        fio="Охапкин И.С.",
        position="слесарь вентиляционщик-кондицеонерщик",
        phone="8-908-319-81-61",
        telegram_id="2081825294",
    )
    Repairmen.objects.create(
        fio="Бородин О.С.", position="слесарь-сантехник", phone="8-933-993-21-68", telegram_id=""
    )
    Repairmen.objects.create(
        fio="Шабанов А.А.",
        position="электромонтажник",
        phone="8-904-822-62-19",
        telegram_id="1696839319",
    )
    Repairmen.objects.create(
        fio="Попов В.В.",
        position="электромонтажник",
        phone="8-904-326-65-23",
        telegram_id="1245921313",
    )
    Repairmen.objects.create(
        fio="Посвистак П.А.",
        position="слесарь по ремонту газового оборудования",
        phone="8-913-606-53-24",
        telegram_id="1165221360",
    )




class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название оборудования')),
                ('vendor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель')),
                ('inv_number', models.CharField(max_length=255, null=True, verbose_name='Инвентарный номер')),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Серийный номер')),
                ('unique_name', models.CharField(max_length=255, verbose_name='Уникальное название оборудования')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления в базу')),
                ('characteristics', models.TextField(blank=True, null=True, verbose_name='ТТХ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание оборудования')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
                'ordering': ['unique_name'],
            },
        ),
        migrations.CreateModel(
            name='FlashMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Всплывающее сообщение')),
            ],
            options={
                'verbose_name': 'Категория оборудования',
                'verbose_name_plural': 'Категории оборудования',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Требуемые материалы')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Статус')),
            ],
        ),
        migrations.CreateModel(
            name='Shops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Местонахождение')),
                ('qty', models.IntegerField(default=0, verbose_name='Количество приписанного оборудования')),
            ],
            options={
                'verbose_name': 'Цех',
                'verbose_name_plural': 'Цеха',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doers_fio', models.CharField(blank=True, max_length=255, null=True, verbose_name='Исполнители')),
                ('priority', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], default=4, verbose_name='Приоритет')),
                ('breakdown_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата поломки')),
                ('breakdown_description', models.TextField(verbose_name='Описание поломки')),
                ('identified_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, выявивший поломку')),
                ('inspection_date', models.DateTimeField(null=True, verbose_name='Дата начала ремонта')),
                ('expected_repair_date', models.DateTimeField(null=True, verbose_name='Ожидаемая дата окончания ремонта')),
                ('inspected_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, запустивший ремонт')),
                ('clarify_date', models.DateTimeField(null=True, verbose_name='Дата уточнения данных по ремонту')),
                ('repair_date', models.DateTimeField(null=True, verbose_name='Дата окончания ремонта')),
                ('repaired_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, завершивший ремонт')),
                ('acceptance_date', models.DateTimeField(null=True, verbose_name='Дата закрытия заявки')),
                ('accepted_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, принявший оборудование')),
                ('revision_date', models.DateTimeField(null=True, verbose_name='Дата возврата на доработку')),
                ('revision_cause', models.TextField(null=True, verbose_name='Причина возврата на доработку')),
                ('revised_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, отклонивший ремонт')),
                ('cancel_cause', models.TextField(null=True, verbose_name='Причина отмены ремонта')),
                ('materials_request', models.CharField(blank=True, max_length=100, null=True, verbose_name='№ заявки на материалы')),
                ('materials_request_date', models.DateTimeField(null=True, verbose_name='Дата создания заявки на материалы')),
                ('material_dispatcher', models.CharField(max_length=100, null=True, verbose_name='Работник, подтверждающий наличие материалов')),
                ('confirm_materials_date', models.DateTimeField(null=True, verbose_name='Дата подтверждения материалов')),
                ('supply_request', models.CharField(blank=True, max_length=255, null=True, verbose_name='№ заявки снабжения')),
                ('supply_request_date', models.DateTimeField(null=True, verbose_name='Дата создания заявки снабжения')),
                ('breakdown_cause', models.TextField(null=True, verbose_name='Причина поломки')),
                ('solution', models.TextField(null=True, verbose_name='Способ устранения')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repairs', to='orders.equipment', verbose_name='Оборудование')),
                ('materials', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='orders.materials', verbose_name='Требуемые материалы')),
                ('status', models.ForeignKey(default=orders.utils.common.OrdStatus['DETECTED'], on_delete=django.db.models.deletion.CASCADE, to='orders.orderstatus', verbose_name='Статус заявки')),
            ],
            options={
                'verbose_name': 'Заявка на ремонт',
                'verbose_name_plural': 'Заявки на ремонт',
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='shop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.shops', verbose_name='Местонахождение'),
        ),
        migrations.RunPython(populate_materials),
        migrations.RunPython(populate_shops),
        migrations.RunPython(populate_status),

        migrations.AlterField(
            model_name='equipment',
            name='shop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='orders.shops', verbose_name='Местонахождение'),
        ),
        migrations.AddField(
            model_name='orders',
            name='worker',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Работник'),
        ),
        migrations.AlterField(
            model_name='orders',
            name='identified_employee',
            field=models.CharField(max_length=100, null=True, verbose_name='Работник, создавший заявку'),
        ),
        migrations.AlterField(
            model_name='shops',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='Местонахождение'),
        ),
        migrations.CreateModel(
            name='Repairmen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=255, verbose_name='ФИО')),
                ('position', models.CharField(max_length=255, null=True, verbose_name='Должность')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('telegram_id', models.CharField(max_length=20, null=True, verbose_name='telegram_id')),
                ('active', models.BooleanField(default=True, null=True, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Ремонтник',
                'verbose_name_plural': 'Ремонтники',
            },
        ),
        migrations.AlterModelOptions(
            name='orderstatus',
            options={'ordering': ['pk'], 'verbose_name': 'Состояние ремонта', 'verbose_name_plural': 'Состояния ремонта'},
        ),
        migrations.RunPython(populate_repairmen),
        migrations.AddField(
            model_name='repairmen',
            name='assignable',
            field=models.BooleanField(default=True, verbose_name='можно назначить на ремонт'),
        ),
        migrations.AlterField(
            model_name='repairmen',
            name='active',
            field=models.BooleanField(default=True, verbose_name='Работает'),
        ),
        migrations.AlterField(
            model_name='repairmen',
            name='telegram_id',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='telegram_id'),
        ),
        migrations.AlterModelOptions(
            name='materials',
            options={'verbose_name': 'Материалы', 'verbose_name_plural': 'Материалы'},
        ),
        migrations.RemoveField(
            model_name='orders',
            name='doers_fio',
        ),
        migrations.AddField(
            model_name='orders',
            name='previous_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders_with_previous_status', to='orders.orderstatus', verbose_name='Предыдущий статус'),
        ),
        migrations.AlterField(
            model_name='orders',
            name='status',
            field=models.ForeignKey(default=orders.utils.common.OrdStatus['DETECTED'], on_delete=django.db.models.deletion.CASCADE, related_name='orders_with_status', to='orders.orderstatus', verbose_name='Статус заявки'),
        ),
        migrations.AddField(
            model_name='orders',
            name='material_request_file',
            field=models.FileField(null=True, upload_to=orders.models.order_directory_path, verbose_name='Pdf заявка на материалы'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='in_operation',
            field=models.BooleanField(default=True, verbose_name='Находится эксплуатации'),
        ),
        migrations.AddField(
            model_name='orders',
            name='is_ppr',
            field=models.BooleanField(db_index=True, default=False, verbose_name='Заявка на ППР'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='ppr_plan_day',
            field=models.IntegerField(blank=True, db_index=True, null=True, verbose_name='День планового ремонта'),
        ),
        migrations.AlterField(
            model_name='orders',
            name='breakdown_date',
            field=models.DateTimeField(verbose_name='Дата поломки'),
        ),
        migrations.AlterField(
            model_name='orders',
            name='acceptance_date',
            field=models.DateTimeField(db_index=True, null=True, verbose_name='Дата закрытия заявки'),
        ),
        migrations.AddField(
            model_name='orders',
            name='dayworkers_string',
            field=models.CharField(blank=True, max_length=256, null=True, verbose_name='Ремонтники'),
        ),
        migrations.CreateModel(
            name='WorkersLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayworkers_string', models.CharField(max_length=256, verbose_name='Ремонтники')),
                ('start_date', models.DateTimeField(db_index=True)),
                ('end_date', models.DateTimeField(db_index=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers_log', to='orders.orders')),
            ],
        ),
        migrations.AddField(
            model_name='equipment',
            name='make_ppr_order',
            field=models.BooleanField(default=True, verbose_name='Формировать заявки ППР каждый месяц'),
        ),
        migrations.CreateModel(
            name='ReferenceMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255, verbose_name='Имя файла')),
                ('sheetname', models.CharField(max_length=255, verbose_name='Имя листа')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('original_name', models.CharField(default=1, max_length=255, verbose_name='Оригинальное название листа')),
            ],
        ),
    ]
