# Generated by Django 4.2.4 on 2024-08-06 10:28

from django.db import migrations, models
import django.db.models.deletion
import orders.models
import orders.utils.common


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название оборудования')),
                ('vendor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель')),
                ('inv_number', models.CharField(max_length=255, null=True, verbose_name='Инвентарный номер')),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Серийный номер')),
                ('unique_name', models.CharField(max_length=255, verbose_name='Уникальное название оборудования')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления в базу')),
                ('characteristics', models.TextField(blank=True, null=True, verbose_name='ТТХ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание оборудования')),
                ('ppr_plan_day', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='День планового ремонта')),
                ('in_operation', models.BooleanField(default=True, verbose_name='Находится эксплуатации')),
                ('make_ppr_order', models.BooleanField(default=True, verbose_name='Формировать заявки ППР каждый месяц')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
                'ordering': ['unique_name'],
            },
        ),
        migrations.CreateModel(
            name='FlashMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Всплывающее сообщение')),
            ],
            options={
                'verbose_name': 'Категория оборудования',
                'verbose_name_plural': 'Категории оборудования',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Требуемые материалы')),
            ],
            options={
                'verbose_name': 'Материалы',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_ppr', models.BooleanField(db_index=True, default=False, verbose_name='Заявка на ППР')),
                ('priority', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], default=4, verbose_name='Приоритет')),
                ('breakdown_date', models.DateTimeField(verbose_name='Дата поломки')),
                ('breakdown_description', models.TextField(verbose_name='Описание поломки')),
                ('worker', models.CharField(blank=True, max_length=100, null=True, verbose_name='Работник')),
                ('dayworkers_string', models.CharField(blank=True, max_length=256, null=True, verbose_name='Ремонтники')),
                ('identified_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, создавший заявку')),
                ('inspection_date', models.DateTimeField(null=True, verbose_name='Дата начала ремонта')),
                ('expected_repair_date', models.DateTimeField(null=True, verbose_name='Ожидаемая дата окончания ремонта')),
                ('inspected_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, запустивший ремонт')),
                ('clarify_date', models.DateTimeField(null=True, verbose_name='Дата уточнения данных по ремонту')),
                ('repair_date', models.DateTimeField(null=True, verbose_name='Дата окончания ремонта')),
                ('repaired_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, завершивший ремонт')),
                ('acceptance_date', models.DateTimeField(db_index=True, null=True, verbose_name='Дата закрытия заявки')),
                ('accepted_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, принявший оборудование')),
                ('revision_date', models.DateTimeField(null=True, verbose_name='Дата возврата на доработку')),
                ('revision_cause', models.TextField(null=True, verbose_name='Причина возврата на доработку')),
                ('revised_employee', models.CharField(max_length=100, null=True, verbose_name='Работник, отклонивший ремонт')),
                ('cancel_cause', models.TextField(null=True, verbose_name='Причина отмены ремонта')),
                ('materials_request', models.CharField(blank=True, max_length=100, null=True, verbose_name='№ заявки на материалы')),
                ('materials_request_date', models.DateTimeField(null=True, verbose_name='Дата создания заявки на материалы')),
                ('material_dispatcher', models.CharField(max_length=100, null=True, verbose_name='Работник, подтверждающий наличие материалов')),
                ('material_request_file', models.FileField(null=True, upload_to=orders.models.order_directory_path, verbose_name='Pdf заявка на материалы')),
                ('confirm_materials_date', models.DateTimeField(null=True, verbose_name='Дата подтверждения материалов')),
                ('supply_request', models.CharField(blank=True, max_length=255, null=True, verbose_name='№ заявки снабжения')),
                ('supply_request_date', models.DateTimeField(null=True, verbose_name='Дата создания заявки снабжения')),
                ('breakdown_cause', models.TextField(null=True, verbose_name='Причина поломки')),
                ('solution', models.TextField(null=True, verbose_name='Способ устранения')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repairs', to='orders.equipment', verbose_name='Оборудование')),
                ('materials', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='orders.materials', verbose_name='Требуемые материалы')),
            ],
            options={
                'verbose_name': 'Заявка на ремонт',
                'verbose_name_plural': 'Заявки на ремонт',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Состояние ремонта',
                'verbose_name_plural': 'Состояния ремонта',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='ReferenceMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255, verbose_name='Имя файла')),
                ('original_name', models.CharField(max_length=255, verbose_name='Оригинальное название листа')),
                ('sheetname', models.CharField(max_length=255, verbose_name='Имя листа')),
                ('content', models.TextField(verbose_name='Содержание')),
            ],
        ),
        migrations.CreateModel(
            name='Repairmen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=255, verbose_name='ФИО')),
                ('position', models.CharField(max_length=255, null=True, verbose_name='Должность')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('telegram_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='telegram_id')),
                ('active', models.BooleanField(default=True, verbose_name='Работает')),
                ('assignable', models.BooleanField(default=True, verbose_name='можно назначить на ремонт')),
            ],
            options={
                'verbose_name': 'Ремонтник',
                'verbose_name_plural': 'Ремонтники',
            },
        ),
        migrations.CreateModel(
            name='Shops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Местонахождение')),
                ('qty', models.IntegerField(default=0, verbose_name='Количество приписанного оборудования')),
            ],
            options={
                'verbose_name': 'Цех',
                'verbose_name_plural': 'Цеха',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkersLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayworkers_string', models.CharField(max_length=256, verbose_name='Ремонтники')),
                ('start_date', models.DateTimeField(db_index=True)),
                ('end_date', models.DateTimeField(db_index=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers_log', to='orders.orders')),
            ],
        ),
        migrations.AddField(
            model_name='orders',
            name='previous_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders_with_previous_status', to='orders.orderstatus', verbose_name='Предыдущий статус'),
        ),
        migrations.AddField(
            model_name='orders',
            name='status',
            field=models.ForeignKey(default=orders.utils.common.OrdStatus['DETECTED'], on_delete=django.db.models.deletion.CASCADE, related_name='orders_with_status', to='orders.orderstatus', verbose_name='Статус заявки'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='shop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='orders.shops', verbose_name='Местонахождение'),
        ),
    ]
